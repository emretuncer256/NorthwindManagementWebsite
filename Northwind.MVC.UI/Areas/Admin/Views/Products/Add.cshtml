@model Northwind.Entities.Concrete.Product
@{
    ViewData["Title"] = "Add a New Product";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}


<div class="row">
    <!-- left column -->
    <div class="col-md-12">
        <!-- jquery validation -->
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">New Product</h3>
            </div>
            <!-- /.card-header -->
            <!-- form start -->
            <form method="post" action="/Admin/Products/Add" id="productAddForm">
                <div class="card-body">
                    <div class="form-group">
                        @Html.LabelFor(x => x.ProductName, "Product Name")
                        @Html.TextBoxFor(x => x.ProductName, new { @class = "form-control", placeholder = "Enter Product Name" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.CategoryId, "Category")
                        @Html.DropDownListFor(x => x.CategoryId, (List<SelectListItem>)ViewBag.Categories, "---SELECT---", new { @class = "form-control" })
                    </div>
                    <div class="form-group mb-0">
                        @Html.LabelFor(x => x.SupplierId, "Supplier")
                        @Html.DropDownListFor(x => x.SupplierId, (List<SelectListItem>)ViewBag.Suppliers, "---SELECT---", new { @class = "form-control" })
                    </div>
                    <div class="form-group mb-0">
                        @Html.LabelFor(x => x.UnitPrice, "Unit Price")
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="fas fa-dollar-sign"></i>
                                </span>
                            </div>
                            @Html.TextBoxFor(x => x.UnitPrice, new { @class = "form-control", placeholder = "Enter Unit Price" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.UnitsInStock, "Units In Stock")
                        @Html.TextBoxFor(x => x.UnitsInStock, new { @class = "form-control", placeholder = "Enter Stock Amount", min = "0" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.QuantityPerUnit, "Quantity Per Unit")
                        @Html.TextBoxFor(x => x.QuantityPerUnit, new { @class = "form-control", placeholder = "Enter Quantity Per Unit" })
                    </div>
                </div>
                <!-- /.card-body -->
                <div class="card-footer">
                    <button type="submit" class="btn btn-primary float-left">Save</button>
                    <button type="reset" class="btn btn-secondary float-right">Clear</button>
                </div>
            </form>
        </div>
        <!-- /.card -->
    </div>
    <!--/.col (left) -->
</div>

@section Scripts{
    <script src="~/theme/plugins/jquery-validation/jquery.validate.min.js"></script>
    <script src="~/theme/plugins/jquery-validation/additional-methods.min.js"></script>
    <script>
        $(function () {
            $('#productAddForm').validate({
                rules: {
                    ProductName: {
                        required: true,
                        minlength: 3,
                        maxlength: 40
                    },
                    CategoryId: {
                        required: true
                    },
                    SupplierId: {
                        required: true
                    },
                    UnitPrice: {
                        required: true,
                        min: 0
                    },
                    UnitsInStock: {
                        required: true,
                        min: 0
                    },
                    QuantityPerUnit: {
                        required: true
                    },
                },
                messages: {
                    ProductName: {
                        required: "Please enter a product name",
                        minlength: "Product name must be at least 3 characters long",
                        maxlength: "The product name must be a maximum of 40 characters long"
                    },
                    CategoryId: {
                        required: "Please select a category"
                    },
                    SupplierId: {
                        required: "Please select a supplier"
                    },
                    UnitPrice: {
                        required: "Please enter a unit price"
                    },
                    UnitsInStock: {
                        required: "Please enter a stock amount",
                        min: "Units in Stock must be at least 0"
                    },
                    QuantityPerUnit: {
                        required: "Please enter a quantity",
                    },
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });
        });</script>
}